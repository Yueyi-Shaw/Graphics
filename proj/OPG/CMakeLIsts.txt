cmake_minimum_required(VERSION 3.13)

project(OPG_LABS VERSION 1.0)

# compiler flag
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17")
set (CMAKE_DEBUG_POSTFIX "_d")

#----------------------------------------------------SET OUTPUT PATH------------------------------------------------------------
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/bin)
# for multi-config builds (e.g. msvc)
foreach( OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES} )
    string( TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG )
    set( CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_SOURCE_DIR}/bin )
    set( CMAKE_LIBRARY_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_SOURCE_DIR}/lib )
    set( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_SOURCE_DIR}/lib )
endforeach( OUTPUTCONFIG CMAKE_CONFIGURATION_TYPES )

#----------------------------------------------------THIRD PARTY LIBS-----------------------------------------------------------
# opengl
find_package(OpenGL REQUIRED)

# glfw
set(GLFW_BUILD_DOCS OFF CACHE BOOL "" FORCE)
set(GLFW_BUILD_TESTS OFF CACHE BOOL "" FORCE)
set(GLFW_BUILD_EXAMPLES OFF CACHE BOOL "" FORCE)
add_subdirectory(lib/glfw)

#----------------------------------------------------INCLUDE FILES PATH----------------------------------------------------------
#include
include_directories(${CMAKE_SOURCE_DIR}/include)
include_directories(lib/glfw/include)

#----------------------------------------------------LINKING LIBS PATH-----------------------------------------------------------
link_directories(${CMAKE_SOURCE_DIR}/lib)
add_library(vermilion
            lib/gl3w.c
            lib/LoadShaders.cpp
            lib/targa.cpp
            lib/vdds.cpp
            lib/loadtexture.cpp
            lib/vermilion.cpp
            lib/vbm.cpp
)
#----------------------------------------------------COMPILE EXECUTABLE----------------------------------------------------------
# header
set(COMMON_HEADERS include/vgl.h include/vapp.h)
# src
add_executable(OPG_LABS src/main.cpp ${COMMON_HEADERS})
set_property(TARGET OPG_LABS PROPERTY DEBUG_POSTFIX _d)
# run dir
set(RUN_DIR ${PROJECT_SOURCE_DIR}/bin)

#----------------------------------------------------LINK EXECUTABLE AND LIBS----------------------------------------------------
set(LIBS vermilion OpenGL::GL ${OPENGL_LIBRARIES} optimized glfw3 debug glfw3_d)
target_link_libraries(OPG_LABS ${LIBS})

# Add dependency on glfw for OPG_LABS
add_dependencies(OPG_LABS glfw)

ADD_CUSTOM_TARGET(debug ${CMAKE_COMMAND} -DCMAKE_BUILD_TYPE:STRING=Debug ${PROJECT_SOURCE_DIR})
ADD_CUSTOM_TARGET(release ${CMAKE_COMMAND} -DCMAKE_BUILD_TYPE:STRING=Release ${PROJECT_SOURCE_DIR})