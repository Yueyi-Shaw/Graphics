cmake_minimum_required(VERSION 3.13)

project(OPG_LABS VERSION 1.0)

# compiler flag
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17")
set(CMAKE_DEBUG_POSTFIX "_d")

#----------------------------------------------------SET OUTPUT PATH------------------------------------------------------------
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
# for multi-config builds (e.g. msvc)
foreach( OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES} )
    string( TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG )
    set( CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR}/bin )
    set( CMAKE_LIBRARY_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR}/lib )
    set( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR}/lib )
endforeach( OUTPUTCONFIG CMAKE_CONFIGURATION_TYPES )

#----------------------------------------------------THIRD PARTY LIBS-----------------------------------------------------------
# opengl
find_package(OpenGL REQUIRED)

# glfw
set(GLFW_BUILD_DOCS OFF CACHE BOOL "" FORCE)
set(GLFW_BUILD_TESTS OFF CACHE BOOL "" FORCE)
set(GLFW_BUILD_EXAMPLES OFF CACHE BOOL "" FORCE)
add_subdirectory(external/glfw)

#----------------------------------------------------BUILD OWN LIBS-----------------------------------------------------------
# vermilion
add_library(vermilion
            vermilion/lib/gl3w.c
            vermilion/lib/LoadShaders.cpp
            vermilion/lib/targa.cpp
            vermilion/lib/vdds.cpp
            vermilion/lib/loadtexture.cpp
            vermilion/lib/vermilion.cpp
            vermilion/lib/vbm.cpp
)

#----------------------------------------------------INCLUDE FILES PATH----------------------------------------------------------
#include
include_directories(${CMAKE_SOURCE_DIR}/include)
include_directories(external/glfw/include)

#----------------------------------------------------LINKING LIBS PATH-----------------------------------------------------------
link_directories(${CMAKE_BINARY_DIR}/lib)

#----------------------------------------------------LINK EXECUTABLE AND LIBS----------------------------------------------------
set(LIBS vermilion ${OPENGL_LIBRARIES} optimized glfw3 debug glfw3_d)

#----------------------------------------------------COMPILE EXECUTABLE----------------------------------------------------------
# header
set(COMMON_HEADERS include/vgl.h include/vapp.h)

# run dir
set(RUN_DIR ${PROJECT_SOURCE_DIR}/bin)

# lab list
set(OPG_LABS
  1-1-keypress
  1-1-triangles
  2-1-shader
)

# add src to executable
foreach(LAB ${OPG_LABS})
    add_executable(${LAB} WIN32 src/${LAB}/${LAB}.cpp ${COMMON_HEADERS})
    set_property(TARGET ${LAB} PROPERTY DEBUG_POSTFIX _d)
    target_link_libraries(${LAB} ${LIBS})
    # Add dependency on glfw for OPG_LABS
    add_dependencies(${LAB} glfw)
endforeach(LAB)

if (CMAKE_BUILD_TYPE MATCHES "Debug")
    add_compile_definitions(_DEBUG)
endif()

ADD_CUSTOM_TARGET(debug ${CMAKE_COMMAND} -DCMAKE_BUILD_TYPE:STRING=Debug ${PROJECT_SOURCE_DIR})
ADD_CUSTOM_TARGET(release ${CMAKE_COMMAND} -DCMAKE_BUILD_TYPE:STRING=Release ${PROJECT_SOURCE_DIR})

#----------------------------------------------------COPY ASSET TO BUILD DIR-----------------------------------------------------
message("Copying resources directory to build directory")
set(SOURCE_DIR ${CMAKE_SOURCE_DIR}/media)
set(TARGET_DIR ${CMAKE_BINARY_DIR}/bin)
file(COPY ${SOURCE_DIR} DESTINATION ${TARGET_DIR})